// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model DBSong {
  id        Int  @id @default(autoincrement())
  title     String
  artist    String?
  lyrics    String
  arrangements  DBSongArrangement[] @relation("Arrangements")
}

model DBSongArrangement {
  id               Int  @id @default(autoincrement())
  song             DBSong @relation("Arrangements", fields: [songId], references: [id])
  songId           Int
  key              String
  units            DBArrangementUnit[]
  isDefault        Boolean @default(true)
  deleted          Boolean @default(false)
}

model DBUnit {
  id             Int  @id @default(autoincrement())
  title          String?
  content        String
  type           DBUnitType   @default(SONG_BLOCK)
  localUID       String?
  arrangements   DBArrangementUnit[]
}

model DBArrangementUnit {
  id                   Int  @id @default(autoincrement())
  arrangement          DBSongArrangement  @relation(fields: [arrangementId], references: [id])
  arrangementId        Int
  unit                 DBUnit  @relation(fields: [unitId], references: [id])
  unitId               Int
  indexInArrangement   Int
}

enum DBUnitType {
  SONG_INTRO
  SONG_ENDING
  SONG_VERSE
  SONG_PRECHORUS
  SONG_CHORUS
  SONG_BRIDGE
  SONG_INTERLUDE
  SONG_SOLO
  SONG_BLOCK
}
